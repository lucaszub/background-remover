#!/bin/bash
# deploy-prod.sh - Script de d√©ploiement complet sur VPS
# PostgreSQL + FastAPI ensemble

# Configuration VPS
VPS_HOST="69.62.105.107"
VPS_USER="root"
PROJECT_PATH="/root/bg-remover-api"

echo "üöÄ === D√âPLOIEMENT COMPLET SUR VPS ==="

# V√©rifications pr√©alables
if [ ! -f ".env.prod" ]; then
    echo "‚ùå Erreur: Fichier .env.prod manquant"
    echo "üìã Copiez .env.prod.example vers .env.prod et configurez-le"
    exit 1
fi

echo "üì¶ 1. Upload du code vers VPS..."
rsync -av --delete \
    --exclude='venv/' \
    --exclude='__pycache__/' \
    --exclude='*.pyc' \
    --exclude='.git/' \
    --exclude='*.log' \
    --exclude='node_modules/' \
    --exclude='.env.prod' \
    . $VPS_USER@$VPS_HOST:$PROJECT_PATH/

# Upload du fichier .env.prod s√©par√©ment
echo "üîê 2. Upload de la configuration..."
scp .env.prod $VPS_USER@$VPS_HOST:$PROJECT_PATH/.env.prod

echo "üê≥ 3. D√©ploiement sur VPS..."
ssh $VPS_USER@$VPS_HOST << 'EOF'
cd /root/bg-remover-api

echo "üîÑ Arr√™t des services existants..."
docker compose -f docker-compose.prod.yml down || true

echo "üèóÔ∏è  Build des images..."
docker compose -f docker-compose.prod.yml build --no-cache

echo "üöÄ D√©marrage des services..."
docker compose -f docker-compose.prod.yml up -d

echo "‚è±Ô∏è  Attente du d√©marrage..."
sleep 10

echo "üìä √âtat des services:"
docker compose -f docker-compose.prod.yml ps

echo "üìù Logs PostgreSQL:"
docker compose -f docker-compose.prod.yml logs --tail=5 postgres

echo "üìù Logs FastAPI:"
docker compose -f docker-compose.prod.yml logs --tail=5 fastapi

echo "üè• Test de sant√©:"
curl -s http://localhost:8001/health || echo "‚ùå API non accessible"
EOF

echo "=== üéâ D√âPLOIEMENT TERMIN√â ==="
echo "üåê API URL: http://$VPS_HOST:8001"
echo "üóÑÔ∏è  PostgreSQL: $VPS_HOST:5432"
echo ""
echo "üß™ Tests √† faire:"
echo "curl http://$VPS_HOST:8001/health"
echo "curl http://$VPS_HOST:8001/docs"