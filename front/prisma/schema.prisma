generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String       @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  accounts      Account[]
  usageHistory  QuotaUsage[]
  sessions      Session[]
  quota         UserQuota?

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model UserQuota {
  id           String   @id @default(cuid())
  userId       String   @unique
  dailyLimit   Int      @default(10)
  dailyUsed    Int      @default(0)
  lastReset    DateTime @default(now())
  monthlyLimit Int?
  monthlyUsed  Int      @default(0)
  monthReset   DateTime @default(now())
  planType     PlanType @default(FREE)
  isActive     Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("user_quotas")
}

model QuotaUsage {
  id               String   @id @default(cuid())
  userId           String
  ipAddress        String
  userAgent        String?
  fileSize         Int?
  fileType         String?
  processingTimeMs Int?
  usedAt           DateTime @default(now())
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, usedAt])
  @@index([usedAt])
  @@map("quota_usage")
}

enum PlanType {
  FREE
  PREMIUM
  ENTERPRISE
}
